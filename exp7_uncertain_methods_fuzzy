import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Define Antecedent (input) and Consequent (output) variables
temperature = ctrl.Antecedent(np.arange(0, 101, 1), 'temperature')
hotness = ctrl.Consequent(np.arange(0, 101, 1), 'hotness')

# Define membership functions for temperature
temperature['cold'] = fuzz.trimf(temperature.universe, [0, 0, 50])
temperature['warm'] = fuzz.trimf(temperature.universe, [0, 50, 100])
temperature['hot'] = fuzz.trimf(temperature.universe, [50, 100, 100])

# Define membership functions for hotness
hotness['cold'] = fuzz.trimf(hotness.universe, [0, 0, 50])
hotness['warm'] = fuzz.trimf(hotness.universe, [0, 50, 100])
hotness['hot'] = fuzz.trimf(hotness.universe, [50, 100, 100])

# Define rules
rule1 = ctrl.Rule(temperature['cold'], hotness['cold'])
rule2 = ctrl.Rule(temperature['warm'], hotness['warm'])
rule3 = ctrl.Rule(temperature['hot'], hotness['hot'])

# Define control system and simulation
hotness_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
hotness_sim = ctrl.ControlSystemSimulation(hotness_ctrl)

# Input temperature value and compute
hotness_sim.input['temperature'] = 75
hotness_sim.compute()

# Output the hotness
print("Hotness:", hotness_sim.output['hotness'])

# Visualize membership functions for temperature
temperature.view()
